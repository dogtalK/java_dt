package day7.method;

public class SumMethodEx {
	
	/* 절차 지향 프로그래밍
	 * 일어나는 일을 시간순으로 프로그래밍 하는 것
	 * 일어난다 > 밥을 먹는다 > 학교에 간다
	 */
	
	/* 객체 지향 프로그래밍
	 * 객체를 정의하고 객체 간 협력을 프로그래밍 하는 것.
	 * -어떤 일을 하기 위해서 일을 하기 위한 객체를 만들고 만들어진 객체를 이용하여 작업
	 * [학생]이 일어난다 > [학생]이 > 밥을 먹는다 > [학생]이 학교에 간다
	 */
	/* 클래스
	 * 클래스는 객체츼 속성과 기능을 코드로 구현한 것
	 * 속성 : 멤버변수
	 * 기능 : 메소드(메서드)
	 * 클래스를 정의한다.
	 * -객체를 클래스로 구현하는 것
	 * -학생이란 객체를 Student라는 클래스로 구현하는 것
	 * (접근제어자) class 클래스명{
	 * 		(접근제어자) 맴버변수;
	 * 		(접근제어자) 메서드;
	 * }
	 */
	/* 맴버변수
	 * 사물(정보) 속성
	 * 사물을 나타낼 수 있는 정보
	 * -대학생의 학번, 이름, 학년, 사느 ㄴ곳 등이 대학생의 정보
	 * -대학생 클래스의 멤버변수는 학번, 이름, 학년 ,사는 곳이 된다
	 * 따로 초기화 하지 않아도 각 타입의 기본값으로 초기화가 됨
	 * 멤버 변수는 기본형도 가능하지만 참조형도 가능
	 */
	/* 메서드
	 * 클래스의 기능
	 * 다른 표현으로 멤버 함수 자바에서 모든 함수는 메서드이다
	 */
	/* 패키지
	 * 클래스 파일의 묶음
	 * 비슷한 기능들을 하는 클래스들끼리 묶어 놓는게 일반적이다
	 * -java.util, java.lang
	 * 패키지를 이용하여 계층구조를 잡을 수 있고, 이를 이용하여 소스코드 관리와 유지보수가 편리하다
	 */
	/* 함수
	 * 하나의 기능을 수행하는 일련의 코드
	 * 필요한 기능을 미리 구현해 놓고 필요할 대마다 호출하여 사용
	 */
	/* 함수의 입력
	 * 함수가 실행하기 위해 필요한 정보로 매개변수라 한다
	 * 매개변수는 꼭 필요한 정보만 사용한다
	 */
	/* 함수의 반환
	 * 함수가 실행 후 알려주는 값을 반환값이라고 한다
	 * 반환값의 타입을 반환타입 또는 리턴타입이라고 한다
	 * 반환값은 return이라는 예약어를 사용한다
	 * 반환값이 필요없는 경우는 반환타입을 void로 설정한다
	 */
	/* 함수 정의하기
	 * 반환타입 함수명(매개변수들){
	 * 		구현;
	 * 		return 값;//반환타입이 있는 경우
	 * } 
	 * 매개변수는 없을 수 있다
	 * 매개변수가 2개인 경우 자료현 변수명1, 자료형 변수명2로 선언해야 한다
	 * -타입이 같아도 각각 선언한다
	 * 반환타입은 자료형을 쓴다
	 * 반환타입이 없는 void인 경우에도return예약어를 이용하여 중간에 종료할 수 있다
	 */

	public static void main(String[] args) {
		/* 두 정수의 합을 구하는 메서드를 만드세요
		 * 메서드는 클래스 안에 있어야한다
		 * 메서드안에 메서드 금지
		 */
		int num1 = 1, num2 = 2;
		int res = sum(num1, num2);
		//int res = 3;
		System.out.println(res);
	}
/** 메서드 설명주석
 * 기능	 	: 두 정수가 주어지면 두 정수의 합을 알려주는 매서드
 * 매서드명 	: sum
 * 리턴타입 	: 두 정수의 합 => int
 * 매개변수 	: 두 정수 => int num1, int num2
 */
/** 메서드 설명주석
 * 기능	 	: 두 정수가 주어지면 두 정수의 합을 알려주는 매서드
 * @param num1 정수1
 * @param num2 정수2
 * @return  두 정수의 합
 */
	public static int sum(int num1, int num2) {
		int res = num1 + num2;
		return res;
		//return num1 + num2;
	}
}
